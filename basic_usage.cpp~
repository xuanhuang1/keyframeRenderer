#include <algorithm>
#include <chrono>
#include <cstdio>
#include <iostream>
#include <fstream>
#include "loader.h"

using json = nlohmann_loader::json;
using namespace visuser;

const std::string USAGE =
    "./mini_vistool <config.json> [options]\n"
    "Options:\n"
    "  -h                   Print this help.";

int main(int argc, char **argv)
{
    if (argc < 2) std::cout << USAGE<< std::endl;

    // get input from command line
    std::vector<std::string> args(argv, argv + argc);
    std::string config_str;
    for (int i = 1; i < argc; ++i) {
        if (args[i] == "-h") {
            std::cout << USAGE << "\n";
            return 0;
        } else {
            config_str = args[1];
        }
    }
    
    // load key frames in the loader data structure
    AniObjHandler h(config_str);

    // loop through key frames
    for (int kf_idx=0; kf_idx<h.widgets.size(); kf_idx++){
	std::cout << "On key frame ["<< kf_idx <<"] data name=" << h.widgets[kf_idx].file_name << "\n";
	// get current frame by key frame
    	for (int f = h.widgets[kf_idx].frameRange[0]; f <= h.widgets[kf_idx].frameRange[1]; f++){

    {
    	widget.print_info();
	for(auto &c : widget.cameras)
	    c.print();
    }
    return 0;
}
